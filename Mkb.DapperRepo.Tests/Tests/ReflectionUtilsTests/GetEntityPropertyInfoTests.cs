using System.Linq;
using Mkb.DapperRepo.Attributes;
using Mkb.DapperRepo.Reflection;
using Mkb.DapperRepo.Tests.Entities;
using Xunit;

namespace Mkb.DapperRepo.Tests.Tests.ReflectionUtilsTests
{
    public class GetEntityPropertyInfoTests
    {
        private const string ColName = "col_name";

        [Fact]
        public void Ensure_we_Get_back_correct_primary_key()
        {
            var entityPropertyInfo = ReflectionUtils.GetEntityPropertyInfo<TableWithNoAutoGeneratedPrimaryKey>();
            Assert.Equal(nameof(TableWithNoAutoGeneratedPrimaryKey.Id), entityPropertyInfo.Id.Name);
        }

        [Fact]
        public void Ensure_we_get_back_correct_nonIdFields()
        {
            var entityPropertyInfo = ReflectionUtils.GetEntityPropertyInfo<TableWithNoAutoGeneratedPrimaryKey>();

            Assert.Equal(2, entityPropertyInfo.AllNonId.Count());
            Assert.Contains(nameof(TableWithNoAutoGeneratedPrimaryKey.NameTest),
                entityPropertyInfo.AllNonId.Select(x => x.Name).ToArray());
            Assert.Contains(nameof(TableWithNoAutoGeneratedPrimaryKey.SomeNumber),
                entityPropertyInfo.AllNonId.Select(x => x.Name).ToArray());
        }

        [Fact]
        public void Ensure_we_respect_RepoColumn()
        {
            var entityPropertyInfo = ReflectionUtils.GetEntityPropertyInfo<Example>();
            Assert.Contains(ColName, entityPropertyInfo.SqlPropertyColNamesDetails.Keys);
            Assert.Equal(nameof(Example.ColNameChange), entityPropertyInfo.SqlPropertyColNamesDetails[ColName].ClassPropertyName);
            Assert.Contains(nameof(Example.ColNameChange), entityPropertyInfo.ClassPropertyColNamesDetails.Keys);
            Assert.Equal(
                ColName,
                entityPropertyInfo.ClassPropertyColNamesDetails[nameof(Example.ColNameChange)].SqlPropertyName);
        }

        [Fact]
        public void Ensure_we_get_back_correct_All()
        {
            var entityPropertyInfo = ReflectionUtils.GetEntityPropertyInfo<TableWithNoAutoGeneratedPrimaryKey>();
            Assert.Equal(3, entityPropertyInfo.All.Count());
            Assert.Contains(nameof(TableWithNoAutoGeneratedPrimaryKey.NameTest),
                entityPropertyInfo.All.Select(x => x.Name).ToArray());
            Assert.Contains(nameof(TableWithNoAutoGeneratedPrimaryKey.SomeNumber),
                entityPropertyInfo.All.Select(x => x.Name).ToArray());
            Assert.Contains(nameof(TableWithNoAutoGeneratedPrimaryKey.Id),
                entityPropertyInfo.All.Select(x => x.Name).ToArray());
        }

        private class Example
        {
            [SqlColumnName(ColName)]
            public string ColNameChange { get; set; }
        }
    }
}