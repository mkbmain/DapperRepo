using System;
using System.Linq;
using System.Threading.Tasks;
using Mkb.DapperRepo.Tests.Entities;
using Mkb.DapperRepo.Tests.Tests.BaseTestClasses;
using Mkb.DapperRepo.Tests.Utils;
using NUnit.Framework;

namespace Mkb.DapperRepo.Tests.Tests.Repo.ExecuteTests
{
    public class ExecuteAsyncTest : BaseAsyncTestClass
    {
        [Test]
        public async Task Ensure_we_Execute()
        {
            const string Name = "blog";
            var testTableItem = new TableWithNoAutoGeneratedPrimaryKey
                { Id = Guid.NewGuid().ToString("N"), NameTest = "Michale", SomeNumber = 33 };
            DataBaseScriptRunnerAndBuilder.InsertTableWithNoAutoGeneratedPrimaryKey(Connection, new[] { testTableItem });
            await Sut.Execute($"Update TableWithNoAutoGeneratedPrimaryKey set Name = '{Name}' where  SomeNumber = 33");

            Reflection.ReflectionUtils
                .GetEntityPropertyInfo<TableWithNoAutoGeneratedPrimaryKey>(); // slightly bad but mapping is handy

            var records = DataBaseScriptRunnerAndBuilder.GetAll<TableWithNoAutoGeneratedPrimaryKey>(Connection)
                .ToArray();
            Assert.AreEqual(1, records.Length);
            Assert.AreEqual(testTableItem.Id, records.First().Id);
            Assert.AreEqual(testTableItem.SomeNumber, records.First().SomeNumber);
            Assert.AreEqual(Name, records.First().NameTest);
        }

        [Test]
        public async Task Ensure_we_Execute_T_Type()
        {
            const string Name = "blog";
            var testTableItem = new TableWithNoAutoGeneratedPrimaryKey
                { Id = Guid.NewGuid().ToString("N"), NameTest = "Michale", SomeNumber = 33 };
            DataBaseScriptRunnerAndBuilder.InsertTableWithNoAutoGeneratedPrimaryKey(Connection, new[] { testTableItem });
            testTableItem.NameTest = Name;
            await Sut.Execute(testTableItem,
                $"Update TableWithNoAutoGeneratedPrimaryKey set Name = @NameTest where  SomeNumber = 33");

            Reflection.ReflectionUtils
                .GetEntityPropertyInfo<TableWithNoAutoGeneratedPrimaryKey>(); // slightly bad but mapping is handy

            var records = DataBaseScriptRunnerAndBuilder.GetAll<TableWithNoAutoGeneratedPrimaryKey>(Connection)
                .ToArray();
            Assert.AreEqual(1, records.Length);
            Assert.AreEqual(testTableItem.Id, records.First().Id);
            Assert.AreEqual(testTableItem.SomeNumber, records.First().SomeNumber);
            Assert.AreEqual(Name, records.First().NameTest);
        }
    }
}