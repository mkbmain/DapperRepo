using System;
using System.Linq;
using Mkb.DapperRepo.Tests.Entities;
using Mkb.DapperRepo.Tests.Tests.BaseTestClasses;
using Mkb.DapperRepo.Tests.Utils;
using NUnit.Framework;

namespace Mkb.DapperRepo.Tests.Tests.Repo.QueryMany
{
    public class QueryManyTests : BaseSyncTestClass
    {
        public QueryManyTests() : base($"{nameof(QueryManyTests)}")
        {
        }

        [Test]
        public void Ensure_we_Get_correct_record_back()
        {
            var testTableItems = new[]
            {
                new TableWithNoAutoGeneratedPrimaryKey {Id = Guid.NewGuid().ToString("N"), Name = "Wanted1", SomeNumber = 33},
                new TableWithNoAutoGeneratedPrimaryKey {Id = Guid.NewGuid().ToString("N"), Name = "othername", SomeNumber = 1},
                new TableWithNoAutoGeneratedPrimaryKey {Id = Guid.NewGuid().ToString("N"), Name = "Wanted2", SomeNumber = 33}
            };

            DataBaseScriptRunnerAndBuilder.InsertTableWithNoAutoGeneratedPrimaryKey(Connection, testTableItems);

            var items = (Sut.QueryMany<TableWithNoAutoGeneratedPrimaryKey>(
                "select * from TableWithNoAutoGeneratedPrimaryKey where SomeNumber = 33")).ToArray();
            var expected = testTableItems.Where(f => f.SomeNumber == 33);
            Assert.AreEqual(expected.Count(), items.Length);
            foreach (var item in expected)
            {
                var test = items.FirstOrDefault(x => x.Id == item.Id);

                Assert.IsNotNull(test);
                Assert.AreEqual(item.Id, test.Id);
                Assert.AreEqual(item.Name, test.Name);
                Assert.AreEqual(item.SomeNumber, test.SomeNumber);
            }
        }

        [Test]
        public void Ensure_we_Get_correct_record_back_diff_name()
        {
            var testTableItems = new[]
            {
                new TableWithNoAutoGeneratedPrimaryKey {Id = Guid.NewGuid().ToString("N"), Name = "Wanted1", SomeNumber = 33},
                new TableWithNoAutoGeneratedPrimaryKey {Id = Guid.NewGuid().ToString("N"), Name = "othername", SomeNumber = 1},
                new TableWithNoAutoGeneratedPrimaryKey {Id = Guid.NewGuid().ToString("N"), Name = "Wanted2", SomeNumber = 33}
            };

            DataBaseScriptRunnerAndBuilder.InsertTableWithNoAutoGeneratedPrimaryKey(Connection, testTableItems);

            var items = Sut.QueryMany<TableWithNoAutoGeneratedPrimaryKeyDiffSqlName>(
                "select * from TableWithNoAutoGeneratedPrimaryKey where SomeNumber = 33").ToArray();
            var expected = testTableItems.Where(f => f.SomeNumber == 33);
            Assert.AreEqual(expected.Count(), items.Length);
            foreach (var item in expected)
            {
                var test = items.FirstOrDefault(x => x.Id == item.Id);

                Assert.IsNotNull(test);
                Assert.AreEqual(item.Name, test.Name);
                Assert.AreEqual(item.Id, test.Id);
                Assert.AreEqual(item.SomeNumber, test.SomeNumber);
            }
        }

        [Test]
        public void Ensure_if_we_have_no_records_we_do_not_blow_up()
        {
            var items =
                (Sut.QueryMany<TableWithNoAutoGeneratedPrimaryKey>("select * from TableWithNoAutoGeneratedPrimaryKey"))
                .ToArray();
            Assert.AreEqual(0, items.Length);
        }
    }
}